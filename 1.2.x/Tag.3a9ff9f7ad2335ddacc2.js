webpackJsonpShineoutDoc([23],{1072:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(0),o=t.n(a),r=t(88),s=t(87),l=t(57),i=t(1073),c=t.n(i),u=t(1074),d=t.n(u),g=Object(l.a)(c.a,d.a),f=[{name:"1-base",title:Object(l.a)("基本用法 \n 基本的使用","Base \n Basic usage"),component:t(1075).default,rawText:t(1076)},{name:"2-type",title:Object(l.a)("类型 \n 内置了 4 种类型（样式），[default,success, info, warning, danger]，默认为 default","type \n There are four built-in types (styles), [default,success, info, warning, danger], the default value is default."),component:t(1077).default,rawText:t(1078)},{name:"3-bgcolor",title:Object(l.a)("背景色 \n 可以通过backgroundColor, 和style去设置自己想要的样式","background color \n You can set the style you want with backgroundColor, and style."),component:t(1079).default,rawText:t(1080)},{name:"4-close",title:Object(l.a)("关闭 \n 设置 onClose 属性时，显示关闭按钮 \n onClose 为 true 时，只关闭提示，不处理 \n onClose 为函数时，关闭后调用此函数","onClose \n When the onClose property is set, the close button is displayed. \n When the onClose property is true, only hide the component. \n When the onClose is a function, call this function after hiding it."),component:t(1081).default,rawText:t(1082)},{name:"5-disabled",title:Object(l.a)("禁用 \n 禁用tag","disabled \n disabled the tag"),component:t(1083).default,rawText:t(1084)},{name:"6-dynamic",title:Object(l.a)("动态用法 \n 通过数组生成tags,动态增改","Dynamic usage \n create tags by use array, add and remove"),component:t(1085).default,rawText:t(1086)}];n.default=Object(r.a)(function(e){return o.a.createElement(s.b,Object.assign({},e,{codes:void 0,source:g,examples:f}))})},1073:function(e,n){e.exports="# Tag *标签*\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| children | any | 无 | 内容，文字或react组件 |\n| className | string | 无 | 扩展className |\n| backgroundColor | string | 无 | 背景色,可以自行的设置标签的背景色 |\n| onClose | func \\| boolean | 无 | 当 onClose 为空时，不显示关闭。如果需要关闭又不需要处理回调，设置为true即可 |\n| onClick | func | 无 | 点击tag事件 |\n| style | object | 无 | 最外层扩展样式 |\n| disabled | boolean | false | 是否禁用 | \n| type | string | *default* |  4 选 1，\\[*success*, *info*, *warning*, *danger(error)*] |"},1074:function(e,n){e.exports="# Tag\n\n<example />\n\n## API\n\n| Property | Type | Default | Description |\n| -------- | ---- | ------- | ----------- |\n| children | any  | - | Content, text or react component |\n| className | string | - | Extend className |\n| backgroundColor | string | - | background color,can set the tag's background color by it |\n| onClose | func \\| boolean | - | When onClose is empty, no close is displayed. If you need to close and do not need to handle callbacks, set it true. |\n| onClick | func | - | the click callback | \n| style | object | - | Container element style |\n| disabled | boolean | false | is disabled | \n| type | string | *default* | options: \\[*success*, *info*, *warning*, *danger(error)*] |"},1075:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(0),o=t.n(a),r=t(32);n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.E,null,"Tag 1"),o.a.createElement(r.E,null,"Tag 2")," sfweokwefk",o.a.createElement(r.E,{onClose:function(){return console.log("I am close")}},"Tag 3"))}},1076:function(e,n){e.exports="/**\n * cn - 基本用法\n *    -- 基本的使用\n * en - Base\n *    -- Basic usage\n */\nimport React from 'react'\nimport { Tag } from 'shineout'\n\nexport default function () {\n  return (\n    <div>\n      <Tag>Tag 1</Tag>\n      <Tag>Tag 2</Tag> sfweokwefk\n      <Tag onClose={() => console.log('I am close')}>Tag 3</Tag>\n    </div>\n  )\n}\n"},1077:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(0),o=t.n(a),r=t(32);n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.E,null,"Default"),o.a.createElement(r.E,{type:"success"},"Success"),o.a.createElement(r.E,{type:"info"},"Info"),o.a.createElement(r.E,{type:"warning"},"Warning"),o.a.createElement(r.E,{type:"danger"},"Danger"))}},1078:function(e,n){e.exports='/**\n * cn - 类型\n *    -- 内置了 4 种类型（样式），[default,success, info, warning, danger]，默认为 default\n * en - type\n *    -- There are four built-in types (styles), [default,success, info, warning, danger], the default value is default.\n */\nimport React from \'react\'\nimport { Tag } from \'shineout\'\n\nexport default function () {\n  return (\n    <div>\n      <Tag>Default</Tag>\n      <Tag type="success">Success</Tag>\n      <Tag type="info">Info</Tag>\n      <Tag type="warning">Warning</Tag>\n      <Tag type="danger">Danger</Tag>\n    </div>\n  )\n}\n'},1079:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(0),o=t.n(a),r=t(32);n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.E,{backgroundColor:"#eeeeee"},"#eeeeee"),o.a.createElement(r.E,{backgroundColor:"#613400"},"#613400"),o.a.createElement(r.E,{style:{color:"#eb2f96",background:"#fff0f6",borderColor:"#ffadd2"}},"#f50"),o.a.createElement(r.E,{style:{color:"#52c41a",background:"#f6ffed",borderColor:"#b7eb8f"}},"#87d068"))}},1080:function(e,n){e.exports="/**\n * cn - 背景色\n *    -- 可以通过backgroundColor, 和style去设置自己想要的样式\n * en - background color\n *    -- You can set the style you want with backgroundColor, and style.\n */\nimport React from 'react'\nimport { Tag } from 'shineout'\n\nexport default function () {\n  return (\n    <div>\n      <Tag backgroundColor=\"#eeeeee\">#eeeeee</Tag>\n      <Tag backgroundColor=\"#613400\">#613400</Tag>\n      <Tag\n        style={{\n          color: '#eb2f96',\n          background: '#fff0f6',\n          borderColor: '#ffadd2',\n        }}\n      >\n        #f50\n      </Tag>\n      <Tag style={{\n        color: '#52c41a',\n        background: '#f6ffed',\n        borderColor: '#b7eb8f',\n      }}\n      >\n        #87d068\n      </Tag>\n    </div>\n  )\n}\n"},1081:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(0),o=t.n(a),r=t(32);n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.E,{onClose:!0},"onClose=true"),o.a.createElement(r.E,{onClose:function(){return console.log("close")}},"onClose=function"),o.a.createElement(r.E,{onClose:function(){return new Promise(function(e){setTimeout(function(){console.log("promise close"),e(!0)},3e3)})}},"onClose=promise"))}},1082:function(e,n){e.exports="/**\n * cn - 关闭\n *    -- 设置 onClose 属性时，显示关闭按钮\n *    -- onClose 为 true 时，只关闭提示，不处理\n *    -- onClose 为函数时，关闭后调用此函数\n * en - onClose\n *    -- When the onClose property is set, the close button is displayed.\n *    -- When the onClose property is true, only hide the component.\n *    -- When the onClose is a function, call this function after hiding it.\n */\nimport React from 'react'\nimport { Tag } from 'shineout'\n\nexport default () => (\n  <div>\n    <Tag onClose>\n      onClose=true\n    </Tag>\n\n    <Tag onClose={() => console.log('close')}>\n      onClose=function\n    </Tag>\n\n    <Tag\n      onClose={() => new Promise((resolve) => {\n        setTimeout(() => {\n          console.log('promise close')\n          resolve(true)\n        }, 3000)\n      })}\n    >\n      onClose=promise\n    </Tag>\n\n  </div>\n)\n"},1083:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(0),o=t.n(a),r=t(32);n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.E,{disabled:!0},"Tag 1"),o.a.createElement(r.E,{disabled:!0,type:"info"},"Tag 2"),o.a.createElement(r.E,{disabled:!0,onClose:!0},"Tag 3"))}},1084:function(e,n){e.exports="/**\n * cn - 禁用\n *    -- 禁用tag\n * en - disabled\n *    -- disabled the tag\n */\nimport React from 'react'\nimport { Tag } from 'shineout'\n\nexport default function () {\n  return (\n    <div>\n      <Tag disabled>Tag 1</Tag>\n      <Tag disabled type=\"info\">Tag 2</Tag>\n      <Tag disabled onClose>Tag 3</Tag>\n    </div>\n  )\n}\n"},1085:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"default",function(){return g});var a=t(16),o=t(1),r=t(3),s=t(4),l=t(2),i=t(5),c=t(0),u=t.n(c),d=t(32),g=function(e){function n(){var e,t;Object(o.a)(this,n);for(var r=arguments.length,i=new Array(r),c=0;c<r;c++)i[c]=arguments[c];return(t=Object(s.a)(this,(e=Object(l.a)(n)).call.apply(e,[this].concat(i)))).state={tags:["Tag 1","Tag 2","Tag 3"],inputVisible:!1},t.remove=function(e){var n=t.state.tags.filter(function(n){return n!==e});t.setState({tags:n})},t.showInput=function(){t.setState({inputVisible:!0})},t.handleInputBlur=function(e){var n=t.state.tags,o=n;e&&-1===n.indexOf(e)&&(o=Object(a.a)(n).concat([e])),console.log(o),t.setState({tags:o,inputVisible:!1})},t}return Object(i.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this,n=this.state,t=n.tags,a=n.inputVisible;return u.a.createElement("div",null,t.map(function(n){return u.a.createElement(d.E,{key:n,onClose:function(){return e.remove(n)}},n)}),a?u.a.createElement(d.E.Input,{onBlur:this.handleInputBlur}):u.a.createElement(d.E,{onClick:this.showInput,style:{background:"#fff",borderStyle:"dashed"}},"+ New Tag"))}}]),n}(c.Component)},1086:function(e,n){e.exports="/**\n * cn - 动态用法\n *    -- 通过数组生成tags,动态增改\n * en - Dynamic usage\n *    -- create tags by use array, add and remove\n */\n\nimport React, { Component } from 'react'\nimport { Tag } from 'shineout'\n\nexport default class extends Component {\n  state = {\n    tags: ['Tag 1', 'Tag 2', 'Tag 3'],\n    inputVisible: false,\n  };\n\n  remove = (removedTag) => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag)\n    this.setState({ tags })\n  }\n\n  showInput = () => {\n    this.setState({ inputVisible: true })\n  }\n\n  handleInputBlur = (value) => {\n    const { tags } = this.state\n    let newTags = tags\n    if (value && tags.indexOf(value) === -1) {\n      newTags = [...tags, value]\n    }\n    console.log(newTags)\n    this.setState({\n      tags: newTags,\n      inputVisible: false,\n    })\n  }\n\n  render() {\n    const { tags, inputVisible } = this.state\n    return (\n      <div>\n        {\n          tags.map(a => (\n            <Tag key={a} onClose={() => this.remove(a)}>{a}</Tag>))\n        }\n        {inputVisible\n          ? (\n            <Tag.Input\n              onBlur={this.handleInputBlur}\n            />)\n          : (\n            <Tag\n              onClick={this.showInput}\n              style={{ background: '#fff', borderStyle: 'dashed' }}\n            >\n              + New Tag\n            </Tag>)\n        }\n      </div>\n    )\n  }\n}\n"}});