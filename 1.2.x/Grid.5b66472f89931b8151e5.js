(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[22],{1175:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(121),o=n(127),s=n(25),c=n(1176),f=n.n(c),d=n(1177),l=n.n(d),u=Object(s.a)(f.a,l.a),h=[{name:"01-base",title:Object(s.a)("任意等分 \n Grid 的栅格体系是动态生成，可以实现任意等份","Arbitrary \n Grid system is dynamic generated and can be any number."),component:n(1178).default,rawText:n(1179)},{name:"02-offset",title:Object(s.a)("偏移 \n offset 属性可以设置偏移，取值方式和宽度相同","Offset \n The offset property set the offset in the same way as the width."),component:n(1180).default,rawText:n(1181)},{name:"03-nested",title:Object(s.a)("嵌套 \n 嵌套的栅格","Nested \n Nested grids"),component:n(1182).default,rawText:n(1183)},{name:"04-gutter",title:Object(s.a)("间距 \n 通过 gutter 属性设置栅格间距","Gutter \n Set grid spacing through the gutter property."),component:n(1184).default,rawText:n(1185)}];t.default=Object(a.a)(function(e){return i.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:u,examples:h}))})},1176:function(e,t){e.exports="# Grid *栅格*\n\n动态栅格体系，用于某些不适合使用 flex 的地方\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| gutter | number | 无 | 栅格之间间距 |\n| offset | number | 0 | 左偏移百分比，0 <= offset < 1 |\n| style | object | 无 | 最外层扩展样式 |\n| width | number | 1 | 宽度百分比，0 < number <= 1 |\n"},1177:function(e,t){e.exports="# Grid\n\n<example />\n\n# API\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| className | string | none | Extend className |\n| gutter | number | none | Spacing between grids |\n| offset | number | 0 | Left offset percentage, 0 <= offset < 1 |\n| style | object | - | Container element style |\n| width | number | 1 | Percentage of width, 0 < number <= 1 |"},1178:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return u});var r=n(5),i=n(6),a=n(8),o=n(2),s=n(7),c=n(0),f=n.n(c),d=n(1261),l=n(1258),u=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(a.a)(this,Object(o.a)(t).call(this,e))).handleCountChange=function(e){n.setState({count:e})},n.state={count:5},n}return Object(s.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this.state.count;return f.a.createElement("div",null,f.a.createElement(d.a,{formatValue:!1,scale:[1,2,3,5,8,13,21,34,55],step:0,value:e,onChange:this.handleCountChange}),f.a.createElement("div",{style:{height:20}}),Array.from({length:e}).map(function(t,n){return f.a.createElement("div",{key:n,style:{background:"#f2f2f2",marginBottom:4,lineHeight:"30px"}},f.a.createElement(l.a,{width:(n+1)/e,style:{color:"#fff",paddingLeft:8,background:"#3399ff"}},n+1,"/",e))}))}}]),t}(c.Component)},1179:function(e,t){e.exports="/**\n * cn - 任意等分\n *    -- Grid 的栅格体系是动态生成，可以实现任意等份\n * en - Arbitrary\n *    -- Grid system is dynamic generated and can be any number.\n */\nimport React, { Component } from 'react'\nimport { Grid, Slider } from 'shineout'\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { count: 5 }\n  }\n\n  handleCountChange = (count) => {\n    this.setState({ count })\n  }\n\n  render() {\n    const { count } = this.state\n\n    return (\n      <div>\n        <Slider\n          formatValue={false}\n          scale={[1, 2, 3, 5, 8, 13, 21, 34, 55]}\n          step={0}\n          value={count}\n          onChange={this.handleCountChange}\n        />\n\n        <div style={{ height: 20 }} />\n\n        {\n          Array.from({ length: count }).map((n, i) => (\n            <div key={i} style={{ background: '#f2f2f2', marginBottom: 4, lineHeight: '30px' }}>\n              <Grid width={(i + 1) / count} style={{ color: '#fff', paddingLeft: 8, background: '#3399ff' }}>\n                {i + 1}/{count}\n              </Grid>\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n"},1180:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(1258),o={color:"#fff",lineHeight:"60px",textAlign:"center",background:"#3399ff"};t.default=function(){return i.a.createElement("div",{style:{background:"#f2f2f2"}},i.a.createElement(a.a,{width:1/3,offset:1/3,style:o},"With 1/3, Offset 1/3"))}},1181:function(e,t){e.exports="/**\n * cn - 偏移\n *    -- offset 属性可以设置偏移，取值方式和宽度相同\n * en - Offset\n *    -- The offset property set the offset in the same way as the width.\n */\nimport React from 'react'\nimport { Grid } from 'shineout'\n\nconst style = {\n  color: '#fff',\n  lineHeight: '60px',\n  textAlign: 'center',\n  background: '#3399ff',\n}\n\nexport default function () {\n  return (\n    <div style={{ background: '#f2f2f2' }}>\n      <Grid width={1 / 3} offset={1 / 3} style={style}>\n        With 1/3, Offset 1/3\n      </Grid>\n    </div>\n  )\n}\n"},1182:function(e,t,n){"use strict";n.r(t);var r=n(13),i=n(0),a=n.n(i),o=n(1258),s={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};t.default=function(){return a.a.createElement(o.a,{style:{textAlign:"center"}},a.a.createElement(o.a,{width:.5,style:s},"1/2"),a.a.createElement(o.a,{width:.5,style:{lineHeight:"30px"}},a.a.createElement("div",null,"1/2"),a.a.createElement("div",null,a.a.createElement(o.a,{style:s,width:1/3},"1/3"),a.a.createElement(o.a,{style:Object(r.a)({},s,{background:"#f5f5f5",color:"#333"}),width:1/3},"1/3"),a.a.createElement(o.a,{style:s,width:1/3},"1/3"))))}},1183:function(e,t){e.exports="/**\n * cn - 嵌套\n *    -- 嵌套的栅格\n * en - Nested\n *    -- Nested grids\n */\nimport React from 'react'\nimport { Grid } from 'shineout'\n\nconst style = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#3399ff',\n}\n\nexport default function () {\n  return (\n    <Grid style={{ textAlign: 'center' }}>\n      <Grid width={1 / 2} style={style}>1/2</Grid>\n\n      <Grid width={1 / 2} style={{ lineHeight: '30px' }}>\n        <div>1/2</div>\n        <div>\n          <Grid style={style} width={1 / 3}>1/3</Grid>\n          <Grid style={{ ...style, background: '#f5f5f5', color: '#333' }} width={1 / 3}>1/3</Grid>\n          <Grid style={style} width={1 / 3}>1/3</Grid>\n        </div>\n      </Grid>\n    </Grid>\n  )\n}\n"},1184:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(1258),o={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};t.default=function(){return i.a.createElement("div",{style:{background:"#f2f2f2"}},i.a.createElement(a.a,{gutter:8},Array.from({length:8}).map(function(e,t){return t+1}).map(function(e){return i.a.createElement(a.a,{key:e,width:1/8},i.a.createElement("div",{style:o},"1/8"))})))}},1185:function(e,t){e.exports="/**\n * cn - 间距\n *    -- 通过 gutter 属性设置栅格间距\n * en - Gutter\n *    -- Set grid spacing through the gutter property.\n */\nimport React from 'react'\nimport { Grid } from 'shineout'\n\nconst style = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#3399ff',\n}\n\nexport default function () {\n  return (\n    <div style={{ background: '#f2f2f2' }}>\n      <Grid gutter={8}>\n        {\n          Array.from({ length: 8 }).map((_, i) => i + 1).map(i => (\n            <Grid key={i} width={1 / 8}>\n              <div style={style}>1/8</div>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </div>\n  )\n}\n"},1258:function(e,t,n){"use strict";n.d(t,"a",function(){return m});var r=n(13),i=n(20),a=n(5),o=n(6),s=n(8),c=n(2),f=n(7),d=n(0),l=n.n(d),u=n(11),h=n.n(u),p=n(148),m=function(e){function t(){return Object(a.a)(this,t),Object(s.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props,t=e.width,n=void 0===t?1:t,a=e.offset,o=e.responsive,s=e.stretch,c=e.children,f=e.gutter,u=Object(i.a)(e,["width","offset","responsive","stretch","children","gutter"]),m=0,g=0;d.Children.toArray(c).forEach(function(e){e.type&&e.type.isGrid&&(e.props.width?g+=e.props.width:m+=1)});var y=m>0?(1-g)/m:0,b=h()(this.props.className,Object(p.a)({width:n,offset:a,responsive:o})),v=Object.assign({},this.props.style);return f&&f>0&&(v.width="auto",v.display="block",v.marginLeft="".concat(0-f/2,"px"),v.marginRight="".concat(0-f/2,"px")),l.a.createElement("div",Object.assign({},u,{style:v,className:b}),d.Children.toArray(c).map(function(e){if(e.type&&e.type.isGrid){var t={style:Object.assign({},e.props.style)};return e.props.width||(t.width=y),s&&(t.style=Object(r.a)({},t.style,{minHeight:"100%",height:"100%"})),f&&f>0&&(t.style=Object(r.a)({},t.style,{paddingLeft:f/2,paddingRight:f/2})),Object(d.cloneElement)(e,t)}return e}))}}]),t}(d.PureComponent);m.isGrid=!0,m.displayName="ShineoutGrid"}}]);