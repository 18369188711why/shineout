webpackJsonpShineoutDoc([25],{238:function(e,n,t){"use strict";t.d(n,"a",function(){return o}),t.d(n,"b",function(){return l});var r=t(9),a=t(62);var o=[],i=function e(n,t,i,d,l){var u=i.join("-"),c=Object(a.e)(l,0===n?1:0),s={id:u,text:u};return c>0&&n<d&&(s.children=Object(r.a)(c).map(function(t){return e(n+1,t,[].concat(function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}(i),[t]),d,l)})),l<10&&o.push(u),s},d=Object(r.a)(4).map(function(e){return i(0,0,[e],10,5)}),l=Object(r.a)(20).map(function(e){return i(0,0,[e],4,10)});n.c=d},381:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),a=t.n(r),o=t(61),i=t(60),d=t(35),l=t(382),u=t.n(l),c=t(383),s=t.n(c),h=Object(d.a)(u.a,s.a),f=[{name:"01-base",title:Object(d.a)("基本用法 \n 基础的级联用法","Base \n Basic usage of Cascader"),component:t(384).default,rawText:t(385)},{name:"02-multiple",title:Object(d.a)("多选 \n 设置 mode 属性，使组件变为多选，mode 可选值如下 \n 0: 只返回完全选中的节点，包含父节点 \n 1: 返回全部选中的节点和半选中的父节点 \n 2: 只返回选中的子节点 \n 3: 如果父节点选中，只返回父节点","Multiple \n Set the mode property change the component to multiple select \n 0: Return only the fully selected node, including the parent node. \n 1: Return the fully selected nodes and semi-selected parent nodes. \n 2: Return only the selected child node. \n 3: Return only the parent node, if the parent node is selected."),component:t(386).default,rawText:t(387)},{name:"03-hover",title:Object(d.a)("移入展开 \n 设置 expandTrigger 为 'hover' 或 'hover-only', 可以在鼠标移入节点时展开，默认为 'click' \n 如果值为 'hover-only'，父节点只能 hover 触发展开, 只有子节点可以点击选择值","Hover \n Set expandTrigger to 'hover' or 'hover-only', expand the node when mouse hover, default value is 'click'."),component:t(388).default,rawText:t(389)},{name:"04-disabled",title:Object(d.a)("禁用 \n disabled 为函数时，根据返回结果禁用节点，同时禁用子节点 \n disabled 为 true 时，禁用全部节点","disabled \n When the disabled property is a function, disable the node and its child nodes according to the returned result. \n When the disabled property is true, disable all nodes."),component:t(390).default,rawText:t(391)},{name:"05-lazyload",title:Object(d.a)("动态加载 \n 数据过大，需要动态加载时，可以设置 loader 函数，当展开未定义 children（undefined）的节点时，触发此函数","Lazy load \n Set the loader function to dynamic fetch data. This function is triggered when the undefined child node is expanded."),component:t(392).default,rawText:t(393)}];n.default=Object(o.a)(function(e){return a.a.createElement(i.b,Object.assign({},e,{codes:void 0,source:h,examples:f}))})},382:function(e,n){e.exports="# Cascader *级联选择*\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| clearable | bool | true | 是否显示清除数据图标 |\n| data | array[{children:[]}] | [] | 数据，子节点为children，如果 children 值为 null 或 长度为 0 时，视为叶子节点 |\n| defaultValue | array\\[key] | 无 | 默认选中的 key （非受控） | \n| disabled | boolean \\| function(d) | false | 显示选择框时有效，为 true 时，所有节点禁用选择，为函数时，根据函数返回结果确定是否禁用 |\n| expandTrigger | string | 'click' | 节点展开触发方式，可选值为 \\['click', 'hover', 'hover-only'] |\n| keygen | string \\| function(obj, parentKey):string | 必填 | 生成key的辅助方法<br />为函数时，使用此函数返回值<br />为string时，使用这个string对应的数据值。如 'id'，相当于 (d) => d.id |\n| loader | function(key, d) | 无 | 设置loader属性后，未定义children的节点视为动态加载节点，点击展开触发 loader事件，children 为 null 或者长度为 0 视为叶子节点 |\n| mode | \\[0\\|1\\|2\\|3\\|4] | 1 | 选中值模式，未设置值为单选<br />0: 只返回完全选中的节点，包含父节点<br />1: 返回全部选中的节点和半选中的父节点<br />2: 只返回选中的子节点<br />3: 如果父节点选中，只返回父节点 |\n| onChange | function(array) | 无 | 设置 onChange 属性时，显示 选择框。参数为当前选中值，和 mode 属性相关 |\n| onItemChange | function(key, d) | 无 | 节点点击触发事件 |\n| renderItem | string \\| function(d) | 必填 | 为 string 时，返回 d\\[string]<br />为 function 时，返回函数结果 |\n| renderResult | string \\| function(d) | renderItem | 选中后在结果中显示的内容，默认和 renderItem 相同 |\n| value | array\\[key] | 无 | 选中的 key （受控） | "},383:function(e,n){e.exports="# Cascader\n\n<example />\n\n## API\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| className | string | - | Extend className |\n| clearable | bool | false | If clearable is true, show clear value icon |\n| data | array[{children:[]}] | [] | data. The child node is children. If the children value is null or its length is 0, it is render as a leaf node. |\n| disabled | boolean \\| function(d) | false | When it is true, all nodes disable the selection; when it is a function, it determines whether it is disabled according to the return result of the function. |\n| expandTrigger | string | 'click' | Expand mode, options: \\['click', 'hover'] |\n| keygen | string \\| function(obj, parentKey):string | required | Auxiliary method for generating key. <br />When it is a function, use the return value of this function. <br /> When it is a string, use the data value corresponding to this string. For example, 'id' is the same thing as (d) => d.id. |\n| loader | function(key) | - | If the loader attribute is a function, the node with no children is regarded as dynamically loaded node. Click expanded button to trigger the loader event. The children property is null or its length is 0 will be regarded as a leaf node. |\n| mode | \\[0\\|1\\|2\\|3\\|4] | 1 | mode <br />0: Returns only the fully selected node including the parent node. <br />1: Returns all selected nodes and semi-selected nodes. <br />2: Return only the selected child nodes. <br />3: If the parent node is full selected, only return the parent node. |\n| onChange | function(array) | - | When the onChange property is set, the selection box is displayed. The parameter is the current selected value, which is related to the mode property. |\n| renderItem | string \\| function(d) | required | When it is a string, return d\\[string].<br /> When it is a function, return the result of this function. |\n| renderResult | string \\| function(d) | renderItem | The content displayed in the result after selecting, if not set, use renderItem |\n| defaultValue | array\\[key] | - | Default selected key (not controlled) | \n| value | array\\[key] | - | Selected key (controlled) |"},384:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),a=t.n(r),o=t(19),i=t(238);n.default=function(){return a.a.createElement(o.f,{data:i.b,keygen:"id",renderItem:function(e){return"node "+e.text}})}},385:function(e,n){e.exports="/**\n * cn - 基本用法\n *    -- 基础的级联用法\n * en - Base\n *   -- Basic usage of Cascader\n */\n\nimport React from 'react'\nimport { Cascader } from 'shineout'\nimport { cascader as data } from 'doc/data/tree'\n\nexport default function () {\n  return (\n    <Cascader\n      data={data}\n      keygen=\"id\"\n      renderItem={n => `node ${n.text}`}\n    />\n  )\n}\n"},386:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),a=t.n(r),o=t(19),i=t(238),d=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),l=function(){return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,n){var t=[],r=!0,a=!1,o=void 0;try{for(var i,d=e[Symbol.iterator]();!(r=(i=d.next()).done)&&(t.push(i.value),!n||t.length!==n);r=!0);}catch(e){a=!0,o=e}finally{try{!r&&d.return&&d.return()}finally{if(a)throw o}}return t}(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();var u=[{value:0,text:"mode=0 (full)"},{value:1,text:"mode=1 (half)"},{value:2,text:"mode=2 (child only)"},{value:3,text:"mode=3 (shallow)"}];var c=function(e){function n(e){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));s.call(t);var r=[];return function e(n,t){var r=l(n,1)[0];r&&(t.push(r.id),r.children&&e(r.children,t))}(i.b,r),t.state={mode:1,value:r},t}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(n,a.a.Component),d(n,[{key:"render",value:function(){var e=this.state,n=e.mode,t=e.value;return a.a.createElement("div",null,a.a.createElement(o.v.Group,{keygen:"value",value:n,format:"value",onChange:this.handleModeChange,data:u,renderItem:"text"}),a.a.createElement("br",null),a.a.createElement(o.f,{data:i.b,keygen:"id",mode:n,onChange:this.handleChange,renderItem:this.renderItem,value:t}))}}]),n}(),s=function(){var e=this;this.handleChange=function(n){e.setState({value:n})},this.handleModeChange=function(n){e.setState({mode:n,value:[]})},this.renderItem=function(e){return"node "+e.id}};n.default=c},387:function(e,n){e.exports="/**\n * cn - 多选\n *    -- 设置 mode 属性，使组件变为多选，mode 可选值如下\n *    -- 0: 只返回完全选中的节点，包含父节点\n *    -- 1: 返回全部选中的节点和半选中的父节点\n *    -- 2: 只返回选中的子节点\n *    -- 3: 如果父节点选中，只返回父节点\n * en - Multiple\n *   -- Set the mode property change the component to multiple select\n *    -- 0: Return only the fully selected node, including the parent node.\n *    -- 1: Return the fully selected nodes and semi-selected parent nodes.\n *    -- 2: Return only the selected child node.\n *    -- 3: Return only the parent node, if the parent node is selected.\n */\n\nimport React from 'react'\nimport { Cascader, Radio } from 'shineout'\nimport { cascader as data } from 'doc/data/tree'\n\nconst modeList = [\n  { value: 0, text: 'mode=0 (full)' },\n  { value: 1, text: 'mode=1 (half)' },\n  { value: 2, text: 'mode=2 (child only)' },\n  { value: 3, text: 'mode=3 (shallow)' },\n]\n\nfunction getValue(list, value) {\n  const [node] = list\n  if (!node) return\n  value.push(node.id)\n  if (node.children) getValue(node.children, value)\n}\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const value = []\n    getValue(data, value)\n\n    this.state = { mode: 1, value }\n  }\n\n  handleChange = (value) => {\n    this.setState({ value })\n  }\n\n  handleModeChange = (mode) => {\n    this.setState({ mode, value: [] })\n  }\n\n  renderItem = node => `node ${node.id}`\n\n  render() {\n    const { mode, value } = this.state\n\n    return (\n      <div>\n        <Radio.Group\n          keygen=\"value\"\n          value={mode}\n          format=\"value\"\n          onChange={this.handleModeChange}\n          data={modeList}\n          renderItem=\"text\"\n        />\n\n        <br />\n\n        <Cascader\n          data={data}\n          keygen=\"id\"\n          mode={mode}\n          onChange={this.handleChange}\n          renderItem={this.renderItem}\n          value={value}\n        />\n      </div>\n    )\n  }\n}\n\n"},388:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),a=t.n(r),o=t(19),i=t(238);n.default=function(){return a.a.createElement(o.f,{data:i.b,keygen:"id",expandTrigger:"hover-only",renderItem:function(e){return"node "+e.text},renderResult:function(e){return e.children&&e.children.length>0?"":e.text},style:{width:300}})}},389:function(e,n){e.exports="/**\n * cn - 移入展开\n *    -- 设置 expandTrigger 为 'hover' 或 'hover-only', 可以在鼠标移入节点时展开，默认为 'click'\n *    -- 如果值为 'hover-only'，父节点只能 hover 触发展开, 只有子节点可以点击选择值\n * en - Hover\n *    -- Set expandTrigger to 'hover' or 'hover-only', expand the node when mouse hover, default value is 'click'.\n */\n\nimport React from 'react'\nimport { Cascader } from 'shineout'\nimport { cascader as data } from 'doc/data/tree'\n\nexport default function () {\n  return (\n    <Cascader\n      data={data}\n      keygen=\"id\"\n      expandTrigger=\"hover-only\"\n      renderItem={n => `node ${n.text}`}\n      renderResult={n => ((n.children && n.children.length > 0) ? '' : n.text)}\n      style={{ width: 300 }}\n    />\n  )\n}\n"},390:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),a=t.n(r),o=t(19),i=t(238),d=function(e){return"1-0"===e.id||"2"===e.id};n.default=function(){return a.a.createElement(o.f,{data:i.b,keygen:"id",disabled:d,mode:2,renderItem:function(e){return"node "+e.text}})}},391:function(e,n){e.exports="/**\n * cn - 禁用\n *    -- disabled 为函数时，根据返回结果禁用节点，同时禁用子节点\n *    -- disabled 为 true 时，禁用全部节点\n * en - disabled\n *    -- When the disabled property is a function, disable the node and its child nodes according to the returned result.\n *    -- When the disabled property is true, disable all nodes.\n */\n\nimport React from 'react'\nimport { Cascader } from 'shineout'\nimport { cascader as data } from 'doc/data/tree'\n\nconst isDisabled = d => d.id === '1-0' || d.id === '2'\n\nexport default function () {\n  return (\n    <Cascader\n      data={data}\n      keygen=\"id\"\n      disabled={isDisabled}\n      mode={2}\n      renderItem={n => `node ${n.text}`}\n    />\n  )\n}\n"},392:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),a=t.n(r),o=t(7),i=t(19),d=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}();var l=["0","1","2","3","4","5","6","7","8"].map(function(e){return{id:e}}),u=function(){return Array.from({length:Math.round(4*Math.random())},function(e,n){return n})},c=function(e){function n(e){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.loader=function(e){var n=e.split(",");setTimeout(function(){t.setState(Object(o.a)(function(e){var t=e.data;n.forEach(function(e,r){t=t.find(function(n){return n.id===e}),r<n.length-1&&(t=t.children)}),t.children=[].concat(function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}(u().map(function(e){return{id:t.id+"-"+e}})))}))},500)},t.keyGenerator=function(e,n){return(n+","+e.id).replace(/^,/,"")},t.handleChange=function(e){return t.setState({value:e})},t.renderItem=function(e){return"node "+e.id},t.state={data:l,value:[]},t}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(n,r["Component"]),d(n,[{key:"render",value:function(){return a.a.createElement(i.f,{data:this.state.data,keygen:this.keyGenerator,loader:this.loader,renderItem:this.renderItem,onChange:this.handleChange,value:this.state.value})}}]),n}();n.default=c},393:function(e,n){e.exports="/**\n * cn - 动态加载\n *    -- 数据过大，需要动态加载时，可以设置 loader 函数，当展开未定义 children（undefined）的节点时，触发此函数\n * en - Lazy load\n *    -- Set the loader function to dynamic fetch data. This function is triggered when the undefined child node is expanded.\n */\nimport React, { Component } from 'react'\nimport immer from 'immer'\nimport { Cascader } from 'shineout'\n\nconst initData = ['0', '1', '2', '3', '4', '5', '6', '7', '8'].map(i => ({ id: i }))\nconst createRange = () => Array.from({ length: Math.round(Math.random() * 4) }, (_, i) => i)\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { data: initData, value: [] }\n  }\n\n  loader = (key) => {\n    const path = key.split(',')\n\n    setTimeout(() => {\n      this.setState(immer((draft) => {\n        let { data } = draft\n        path.forEach((pid, i) => {\n          data = data.find(d => d.id === pid)\n          if (i < path.length - 1) data = data.children\n        })\n        data.children = [...createRange().map(i => ({ id: `${data.id}-${i}` }))]\n      }))\n    }, 500)\n  }\n\n  keyGenerator = (node, parentKey) => `${parentKey},${node.id}`.replace(/^,/, '')\n\n  handleChange = value => this.setState({ value })\n\n  renderItem = node => `node ${node.id}`\n\n  render() {\n    return (\n      <Cascader\n        data={this.state.data}\n        keygen={this.keyGenerator}\n        loader={this.loader}\n        renderItem={this.renderItem}\n        onChange={this.handleChange}\n        value={this.state.value}\n      />\n    )\n  }\n}\n\n"}});