webpackJsonp([15],{1288:function(t,e){t.exports="# Popover *气泡*\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| background | string | '#fff' | 弹出层背景色（含箭头） |\n| border | string | '#dee2e6' | 弹出层边框颜色（含箭头） |\n| className | string | 无 | 扩展className |\n| children | ReactElement | 必填 | 子元素只能为一个 ReactElement |\n| content | ReactElement \\| function | 必填 | 弹出内容 | \n| position | string | 'top' | 弹出层位置，可选值为 \\['top-left', 'top', 'top-right', 'left-top', 'left', 'left-bottom', 'right-top', 'right', 'right-bottom', 'bottom-left', 'bottom', 'bottom-right'] |\n| style | object | 无 | 最外层扩展样式 |\n| type | string | 无 | 可选值为，\\['success', 'info', 'warning', 'danger'] |\n"},1289:function(t,e){t.exports="# Popover\n\n<example />\n\n## API"},1290:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(128);e.default=function(){var t=r.a.createElement("div",{style:{width:200,padding:20}},"Some text");return r.a.createElement(l.r,{content:t,style:{marginRight:12}},r.a.createElement(l.c,null,"Hover"))}},1291:function(t,e){t.exports="/**\n * cn - 基本用法\n * en - Base\n */\nimport React from 'react'\nimport { Button, Popover } from 'shineout'\n\nexport default function () {\n  const content = <div style={{ width: 200, padding: 20 }}>Some text</div>\n  return (\n    <Popover content={content} style={{ marginRight: 12 }}>\n      <Button>Hover</Button>\n    </Popover>\n  )\n}\n"},1292:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(128),i=[[null,"bottom-left","bottom","bottom-right",null],["right-top",null,null,null,"left-top"],["right",null,null,null,"left"],["right-bottom",null,null,null,"left-bottom"],[null,"top-left","top","top-right",null]],c={width:100,textAlign:"center",lineHeight:"30px",margin:4,display:"inline-block",border:"solid 1px #eee"};e.default=function(){var t=r.a.createElement("div",{style:{width:240,padding:30}},"Some text");return i.map(function(e,n){return r.a.createElement("div",{key:n},e.map(function(e,n){return e?r.a.createElement(l.r,{content:t,position:e,key:n},r.a.createElement("div",{style:c},e)):r.a.createElement("div",{key:n,style:Object.assign({},c,{border:0})})}))})}},1293:function(t,e){t.exports="/**\n * cn - 弹出位置\n * en - Position\n */\nimport React from 'react'\nimport { Popover } from 'shineout'\n\nconst positions = [\n  [null, 'bottom-left', 'bottom', 'bottom-right', null],\n  ['right-top', null, null, null, 'left-top'],\n  ['right', null, null, null, 'left'],\n  ['right-bottom', null, null, null, 'left-bottom'],\n  [null, 'top-left', 'top', 'top-right', null],\n]\n\nconst style = {\n  width: 100, textAlign: 'center', lineHeight: '30px', margin: 4, display: 'inline-block', border: 'solid 1px #eee',\n}\n\nexport default function () {\n  const content = <div style={{ width: 240, padding: 30 }}>Some text</div>\n  return positions.map((row, i) => (\n    <div key={i}>\n      {\n        row.map((p, j) =>\n        (p ? (\n          <Popover content={content} position={p} key={j}>\n            <div style={style}>{p}</div>\n          </Popover>\n          )\n         : <div key={j} style={{ ...style, border: 0 }} />))\n      }\n    </div>\n  ))\n}\n"},1294:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(128);e.default=function(){var t=r.a.createElement(l.d,{style:{width:300,border:0,background:"transparent"}},r.a.createElement(l.d.Header,null,"Header"),r.a.createElement(l.d.Body,{style:{height:80}},"Body"));return r.a.createElement(l.r,{content:t,trigger:"click",style:{marginRight:12}},r.a.createElement(l.c,null,"Click me"))}},1295:function(t,e){t.exports="/**\n * cn - 点击触发\n * en - Click\n */\nimport React from 'react'\nimport { Button, Popover, Card } from 'shineout'\n\nexport default function () {\n  const content = (\n    <Card style={{ width: 300, border: 0, background: 'transparent' }}>\n      <Card.Header>Header</Card.Header>\n      <Card.Body style={{ height: 80 }}>Body</Card.Body>\n    </Card>\n  )\n  return (\n    <Popover content={content} trigger=\"click\" style={{ marginRight: 12 }}>\n      <Button>Click me</Button>\n    </Popover>\n  )\n}\n"},1296:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(128);e.default=function(){return r.a.createElement(l.r,{content:function(t){return r.a.createElement("div",{style:{padding:20}},r.a.createElement("div",null,"Are you sure you want to close this panel?"),r.a.createElement("div",{style:{marginTop:30,textAlign:"right"}},r.a.createElement(l.c,{size:"small",onClick:function(){t(),l.o.success("Popover panel closed.")}},"close")))},trigger:"click",style:{marginRight:12}},r.a.createElement(l.c,null,"Click me"))}},1297:function(t,e){t.exports="/**\n * cn - 关闭事件\n *    -- content 属性可以为一个函数，会传递 close 函数，用来在弹出面板内部处理关闭事件\n * en - onClose\n */\nimport React from 'react'\nimport { Button, Popover, Message } from 'shineout'\n\nexport default function () {\n  const content = close => (\n    <div style={{ padding: 20 }}>\n      <div>Are you sure you want to close this panel?</div>\n      <div style={{ marginTop: 30, textAlign: 'right' }}>\n        <Button\n          size=\"small\"\n          onClick={() => {\n            close()\n            Message.success('Popover panel closed.')\n          }}\n        >\n          close\n        </Button>\n      </div>\n    </div>\n  )\n\n  return (\n    <Popover content={content} trigger=\"click\" style={{ marginRight: 12 }}>\n      <Button>Click me</Button>\n    </Popover>\n  )\n}\n"},1298:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(128),i=["success","info","warning","danger"],c={width:100,textAlign:"center",lineHeight:"30px",margin:4,display:"inline-block",border:"solid 1px #eee"};e.default=function(){var t=r.a.createElement("div",{style:{width:200,padding:20}},"Some text");return i.map(function(e,n){return r.a.createElement(l.r,{content:t,type:e,key:n},r.a.createElement("div",{style:c},e))})}},1299:function(t,e){t.exports="/**\n * cn - 样式\n * en - type\n */\nimport React from 'react'\nimport { Popover } from 'shineout'\n\nconst types = ['success', 'info', 'warning', 'danger']\n\nconst style = {\n  width: 100, textAlign: 'center', lineHeight: '30px', margin: 4, display: 'inline-block', border: 'solid 1px #eee',\n}\n\nexport default function () {\n  const content = <div style={{ width: 200, padding: 20 }}>Some text</div>\n  return types.map((t, i) => (\n    <Popover content={content} type={t} key={i}>\n      <div style={style}>{t}</div>\n    </Popover>\n  ))\n}\n"},1300:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(128);e.default=function(){var t=r.a.createElement("div",{style:{width:200,padding:20,color:"gold"}},"Some text");return r.a.createElement(l.r,{content:t,background:"#555",border:"gold",style:{marginRight:12}},r.a.createElement(l.c,null,"Hover"))}},1301:function(t,e){t.exports="/**\n * cn -\n *    -- 可以通过 background 和 color 自定义样式\n */\nimport React from 'react'\nimport { Button, Popover } from 'shineout'\n\nexport default function () {\n  const content = <div style={{ width: 200, padding: 20, color: 'gold' }}>Some text</div>\n  return (\n    <Popover content={content} background=\"#555\" border=\"gold\" style={{ marginRight: 12 }}>\n      <Button>Hover</Button>\n    </Popover>\n  )\n}\n"},1411:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n.n(o),l=n(130),i=n(129),c=n(86),a=n(1288),u=n.n(a),s=n(1289),d=n.n(s),p=Object(c.a)(u.a,d.a),m=[{name:"1-base",title:Object(c.a)("基本用法","Base"),component:n(1290).default,rawText:n(1291)},{name:"2-position",title:Object(c.a)("弹出位置","Position"),component:n(1292).default,rawText:n(1293)},{name:"3-click",title:Object(c.a)("点击触发","Click"),component:n(1294).default,rawText:n(1295)},{name:"4-func",title:Object(c.a)("关闭事件 \n content 属性可以为一个函数，会传递 close 函数，用来在弹出面板内部处理关闭事件","onClose"),component:n(1296).default,rawText:n(1297)},{name:"5-type",title:Object(c.a)("样式","type"),component:n(1298).default,rawText:n(1299)},{name:"6-type",title:Object(c.a)(" \n 可以通过 background 和 color 自定义样式",""),component:n(1300).default,rawText:n(1301)}];e.default=Object(l.a)(function(t){return r.a.createElement(i.b,Object.assign({},t,{codes:void 0,source:p,examples:m}))})}});